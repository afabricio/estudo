package br.com.study.webboot.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import br.com.study.webboot.domain.Customer;
import br.com.study.webboot.repository.CustomerRepository;

@RestController
@RequestMapping(path = "/customerjpa") // This means URL's start with /demo (after Application path)
public class CustomerController {
	@Autowired // This means to get the bean called userRepository
				// Which is auto-generated by Spring, we will use it to handle the data
	private CustomerRepository customerRepository;
	
//	@Autowired
//	private AccountRepository accountRepository;

	@PostMapping
	public ResponseEntity<Customer> addNewUser(@RequestBody Customer user) {

		customerRepository.save(user);
		return new ResponseEntity<Customer>(user, HttpStatus.OK);
	}

	@GetMapping("/{id}")
	public ResponseEntity<Customer>  getUser(@PathVariable Long id) {
		// This returns a JSON or XML with the users
		return new ResponseEntity<Customer>(customerRepository.findById(id).get(), HttpStatus.OK);
	}
	
	@GetMapping
	public @ResponseBody Iterable<Customer> getAllUsers() {
		// This returns a JSON or XML with the users
		return customerRepository.findAll();
	}
	
//	private void validateUser(Principal principal) {
//		String userId = principal.getName();
//		this.accountRepository
//			.findByUsername(userId)
//			.orElseThrow(() ->
//				new UserNotFoundException(userId));
//	}
}