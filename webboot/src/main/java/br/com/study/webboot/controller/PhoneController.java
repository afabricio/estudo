package br.com.study.webboot.controller;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

import br.com.study.webboot.domain.Phone;
import br.com.study.webboot.repository.AccountRepository;
import br.com.study.webboot.repository.PhoneRepository;


@RestController
@RequestMapping("/{customerId}/phonejpa")
public class PhoneController {
	@Autowired // This means to get the bean called userRepository
				// Which is auto-generated by Spring, we will use it to handle the data
	private PhoneRepository phoneRepository;
	
	private AccountRepository accountRepository;

	@PostMapping
	public ResponseEntity<Phone> addNewPhone(@RequestBody Phone phone,@PathVariable Long customerId) {

		phone.setCustomerid(customerId);
		
		phoneRepository.save(phone);
		return new ResponseEntity<Phone>(phone, HttpStatus.OK);
	}

	@GetMapping("/{id}")
	public ResponseEntity<Phone>  getUser(@PathVariable Long id) {
		// This returns a JSON or XML with the users
		return new ResponseEntity<Phone>(phoneRepository.findById(id).get(), HttpStatus.OK);
	}
	
	@GetMapping
	public @ResponseBody Iterable<Phone> getAllUsers() {
		// This returns a JSON or XML with the users
		return phoneRepository.findAll();
	}
	
	

	
}